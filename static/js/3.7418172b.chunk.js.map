{"version":3,"sources":["Components/Profile/ProfileInformation/ProfileInfo.module.css","Components/Profile/My Posts/MyPosts.module.css","Components/Profile/My Posts/Post/Post.module.css","Components/Profile/ProfileInformation/ProfileStatus.jsx","Components/Profile/ProfileInformation/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInformation/ProfileInfo.jsx","Components/Profile/My Posts/Post/Post.jsx","Components/Profile/My Posts/MyPosts.jsx","Components/Profile/My Posts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileInfo","profile","className","style","descriptionBlock","src","photos","large","lookingForAJobDescription","Preloader","Post","item","text","likesCount","MyPosts","memo","postsElements","posts","map","p","textPost","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostText","maxLength","maxLengthCreator","reduxForm","form","handleSubmit","Field","validate","required","component","Textarea","name","placeholder","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.7418172b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3FJ_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__21adp\",\"posts\":\"MyPosts_posts__2Y8Ii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1V3oo\"};","import React from \"react\";\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status:this.props.status\r\n    }\r\n\r\n    activateEditMode = ()=>{\r\n        this.setState({\r\n            editMode:true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode=()=>{\r\n        this.setState({\r\n            editMode:false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e)=>{\r\n      this.setState({\r\n          status: e.currentTarget.value\r\n      })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\")\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || '----'}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}></input>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props)=> {\r\n\r\n    let [editMode,setEditMode] = useState(false)\r\n    let [status,setStatus] = useState(props.status)\r\n\r\n    useEffect( ()=>{\r\n\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode = () =>{\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode=() => {\r\n       setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || '----'}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onChange={onStatusChange}\r\n                        value={status}  onBlur={deactivateEditMode} />\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport style from './ProfileInfo.module.css'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus}) => {\r\n    if(!profile){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={style.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <div>{profile.lookingForAJobDescription}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import React from 'react'\r\nimport style from './Post.module.css'\r\n\r\nconst Post = (props)=> {\r\n      return (\r\n            <div className={style.item}>\r\n                <img src=\"https://png.pngtree.com/png-vector/20200625/ourmid/pngtree-business-person-short-hair-girl-silhouette-avatar-png-image_2266253.jpg\"/>\r\n                {props.text}\r\n            <div>\r\n            <span>like</span> {props.likesCount}\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react'\r\nimport style from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = props.posts\r\n        .map(p => <Post text={p.textPost} likesCount={p.likesCount}/>)\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.postsBlock}>\r\n            <h3>my posts</h3>\r\n            <AddPostFormRedux onSubmit={addNewPost}/>\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                    <Field validate={[required,maxLength]}\r\n                           component={Textarea} name={'newPostText'}\r\n                           placeholder={'Enter you post'}/>\r\n            </div>\r\n            <div>\r\n                <button >Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n    form: \"profileAddNewPostForm\"\r\n})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react'\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer;","import React from 'react'\r\nimport ProfileInfo from \"./ProfileInformation/ProfileInfo\";\r\nimport MyPostsContainer from \"./My Posts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus,} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}